@function em($target, $context: $base-font-size) {
	@if $target == 0 { @return 0 }
	@return $target / $context + 0em;
}

@function flex($target, $context: $base-width) {
	@if $target == 0 { @return 0 }
	@return $target / $context * 100%;
}

@mixin background-gradient($startColor, $endColor, $orientation: '') {
  background: $startColor;

  @if $orientation == 'vertical' {
	background: -webkit-linear-gradient(top, $startColor, $endColor);
	background: linear-gradient(to bottom, $startColor, $endColor);
  } @else if $orientation == 'horizontal' {
	background: -webkit-linear-gradient(left, $startColor, $endColor);
	background: linear-gradient(to right, $startColor, $endColor);
  } @else {
	background: -webkit-radial-gradient(center, ellipse cover, $startColor, $endColor);
	background: radial-gradient(ellipse at center, $startColor, $endColor);
  }
}

@mixin center-element {
  display: block;
  margin-left: auto;
  margin-right: auto;
}

@mixin vertically-centred {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin clearfix {
  *zoom: 1;

  &:before, &:after {
	content: ' ';
	display: table;
  }

  &:after {
	clear: both;
  }
}

@mixin rem2px($property, $sizeValue: 1.6) {
  #{$property}: ($sizeValue * 10) + px;
  #{$property}: $sizeValue + rem;
}

@mixin position($type, $top: null, $right: null, $bottom: null, $left: null) {
  position: $type;
  top: $top;
  right: $right;
  bottom: $bottom;
  left: $left;
}

@mixin size($width, $height: $width) {
  width: $width;
  height: $height;
}

@mixin prefix($property, $value, $vendors: webkit moz ms o) {
  @if $vendors {
	@each $vendor in $vendors {
	  #{"-" + $vendor + "-" + $property}: #{$value};
	}
  }
  #{$property}: #{$value};
}